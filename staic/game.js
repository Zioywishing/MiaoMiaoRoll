//存储游戏运行时的各种变量
class Status {
	players_length = () => {
		return this.players.length;
	};
	//通过dom_avatar找player
	dom2player = dom => {
		for (var p of this.players) {
			if (p.dom_avatar == dom) {
				return p;
			}
		}
		return null;
	};
	//获取下一名角色
	get_nextPlayer = () => {
		var nextPlayer = null;
		for (var i = 0; i < this.players.length - 1; i++) {
			var p = this.players[i];
			// console.log(p,this.activePlayer)
			if (p == this.activePlayer) {
				nextPlayer = this.players[i + 1];
				break;
			}
		}
		//不和没钱的人玩
		if (nextPlayer != null && nextPlayer.money < 0) {
			nextPlayer = null;
		}
		return nextPlayer;
	};
	players = []; //游戏中所有的玩家
	players_die = []; // 死人堆
	game_me = []; //自己操控的玩家
	magnification = 1; //当前游戏倍率
	magnification1 = 0; //本轮增加倍率，[0,3]，用于防止本轮增加倍率超过3或小于0
	gamePhase = 1; //第几局游戏
	gameRound = 1; //本局游戏第几轮
	prepareToRoll = []; //位于dropTable的准备重新投掷的骰子的序号，[0,4]
	game_player = null; //当前回合玩家
	status_name = "StartPage"; //小阶段名，如等待骰子，投骰子中
	status_name2 = "Start"; //大阶段名，如投骰子阶段，加筹码阶段
	setting = {}; //储存像是ai难度，最大局数，初始筹码之类的东西
	activePlayer = null; //当前回合的玩家
	playerImg = null; //
}

_status = new Status(); //一切的起点喵
_status.setting.aiDifficulty = 1; //默认1档
_status.setting.maxPhase = 3; //默认3局
_status.setting.initMoney = 1000; //初始1000元

//存储游戏运行时的变量和函数
var _ui = {};
_ui.add_avatar_stack = 0; //用于解决jquery与vanillaTilt之间的冲突
_ui.game_hasDialog = false;
_ui.svg = {}; //储存svg
_ui.game_log_changeAiSucceed = {stackL:0}

//dropTable中投掷骰子图标
_ui.svg.dice =
	'<svg t="1695706281416" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="25316" width="200" height="200"><path d="M952 512c0 43.8-6.4 86.1-18.3 126-17.6 59.1-47.4 113-86.3 158.8-11.4 13.4-23.7 26.2-36.6 38.2-7.1 6.5-14.4 12.9-21.9 19-27.5 22.3-57.8 41.4-90.3 56.6-7.4 3.5-15 6.8-22.7 9.8-21.2 8.5-43.2 15.5-65.9 20.6-31.5 7.2-64.3 11-98.1 11C269 952 72 755 72 512c0-43.8 6.4-86 18.3-125.9 3.8-12.8 8.2-25.4 13.1-37.7 7.9-19.6 17.1-38.6 27.6-56.7 0.2-0.4 0.5-0.9 0.7-1.3 9.8-16.9 20.8-33 32.8-48.4 13.3-17.1 27.9-33.2 43.5-48.2 15.3-14.7 31.7-28.2 49.1-40.6 22.7-16.1 46.9-30.2 72.5-41.8 13-6 26.4-11.3 40.1-16 12.6-4.3 25.5-8.1 38.6-11.2 0.6-0.1 1.1-0.3 1.7-0.4C442.7 76.1 476.9 72 512 72c27.3 0 54 2.5 79.9 7.2 123.3 22.6 228.7 96.6 293 199 24.7 39.3 43.3 82.7 54.6 129.1 8.2 33.6 12.5 68.6 12.5 104.7z" fill="#443F80" p-id="25317"></path><path d="M123.6 672.2c-20.7-12.5-33.3-34.9-33.3-59.1V304.4c0-12 3.1-23.6 8.8-33.8l309.2 187.8 8.8 290.6-8.8 84.1c-12.4 0-24.8-3.3-35.8-10L123.6 672.2z" fill="#C640A6" p-id="25318" data-spm-anchor-id="a313x.search_index.0.i26.6e8f3a81O12cqo" class="selected"></path><path d="M693 672.2c20.7-12.5 33.3-34.9 33.3-59.1V304.4c0-12-3.1-23.6-8.8-33.8L408.3 458.5v374.7c12.4 0 24.8-3.3 35.8-10l248.9-151z" fill="#B72C9D" p-id="25319"></path><path d="M218.870058 639.830943a45.6 25.8 66.93 1 0 47.473383-20.219741 45.6 25.8 66.93 1 0-47.473383 20.219741Z" fill="#F9B630" p-id="25320"></path><path d="M218.868243 509.928048a45.6 25.8 66.93 1 0 47.473383-20.219741 45.6 25.8 66.93 1 0-47.473383 20.219741Z" fill="#F9B630" p-id="25321"></path><path d="M717.5 270.7L442.9 452.3c-10.5 6.9-22.5 10.4-34.6 10.4s-24.1-3.5-34.6-10.4L99.1 270.7c5.7-10.2 14-19 24.4-25.3L372.3 93.9c11-6.7 23.5-10.1 35.9-10.1 12.5 0 24.9 3.3 35.9 10.1L693 245.4c10.4 6.3 18.7 15.1 24.5 25.3z" fill="#F473C3" p-id="25322"></path><path d="M717.5 270.7L442.9 452.3c-10.5 6.9-22.5 10.4-34.6 10.4V83.8c12.5 0 24.9 3.3 35.9 10.1l248.9 151.5c10.3 6.3 18.6 15.1 24.4 25.3z" fill="#C640A6" p-id="25323"></path><path d="M454.1 263c0 15.9-20.4 28.7-45.5 28.7h-0.3c-25-0.1-45.2-12.9-45.2-28.7s20.2-28.6 45.2-28.7h0.3c25.2 0 45.5 12.8 45.5 28.7z" fill="#FFD071" p-id="25324"></path><path d="M504.6 263a45.5 28.7 0 1 0 91 0 45.5 28.7 0 1 0-91 0Z" fill="#F9B630" p-id="25325"></path><path d="M221.7 263a45.5 28.7 0 1 0 91 0 45.5 28.7 0 1 0-91 0Z" fill="#FFD071" p-id="25326"></path><path d="M933.7 526.2V638c-17.6 59.1-47.4 113-86.3 158.8-11.4 13.4-23.7 26.2-36.6 38.2-7.1 6.5-14.4 12.9-21.9 19-27.5 22.3-57.8 41.4-90.3 56.6-7.4 3.5-15 6.8-22.7 9.8-21.2 8.5-43.2 15.5-65.9 20.6h-91.2c-30.5 0-55.3-24.8-55.3-55.3V526.2c0-10.2 2.8-19.8 7.7-28 4.8-8.2 11.8-15.1 20-19.9 4.1-2.4 8.5-4.2 13.1-5.5s9.5-1.9 14.6-1.9h359.5c30.5 0 55.3 24.8 55.3 55.3z" fill="#F9F7FC" p-id="25327"></path><path d="M933.7 526.2V638c-17.6 59.1-47.4 113-86.3 158.8-11.4 13.4-23.7 26.2-36.6 38.2-7.1 6.5-14.4 12.9-21.9 19-27.5 22.3-57.8 41.4-90.3 56.6V470.9h179.7c30.6 0 55.4 24.8 55.4 55.3z" fill="#DCDAEB" p-id="25328"></path><path d="M740.1 706c0 22.9-18.6 41.5-41.5 41.5s-41.5-18.6-41.5-41.5 18.6-41.5 41.5-41.5c23 0 41.5 18.6 41.5 41.5z" fill="#767DD4" p-id="25329"></path><path d="M574.2 581.5m-41.5 0a41.5 41.5 0 1 0 83 0 41.5 41.5 0 1 0-83 0Z" fill="#767DD4" p-id="25330"></path><path d="M847.4 796.8C836 810.2 823.7 823 810.8 835c-7.1 6.5-14.4 12.9-21.9 19-4.6-6.7-7.3-14.8-7.3-23.5 0-22.9 18.6-41.5 41.5-41.5 9.1-0.1 17.5 2.8 24.3 7.8z" fill="#5E6ACA" p-id="25331"></path><path d="M574.2 830.4m-41.5 0a41.5 41.5 0 1 0 83 0 41.5 41.5 0 1 0-83 0Z" fill="#767DD4" p-id="25332"></path><path d="M823.1 581.5m-41.5 0a41.5 41.5 0 1 0 83 0 41.5 41.5 0 1 0-83 0Z" fill="#5E6ACA" p-id="25333"></path><path d="M740.1 706c0 22.9-18.6 41.5-41.5 41.5v-82.9c23-0.1 41.5 18.5 41.5 41.4z" fill="#5E6ACA" p-id="25334"></path><path d="M454.1 263c0 15.9-20.4 28.7-45.5 28.7h-0.3v-57.5h0.3c25.2 0.1 45.5 12.9 45.5 28.8z" fill="#F9B630" p-id="25335"></path><path d="M222.8 583.2c-15.9 6.8-19.6 32.5-8.5 58.6 5.1 12 12.6 22.2 21.2 28.7 6.4 4.9 12.9 7.4 18.9 7.4 2.8 0 5.5-0.5 8.1-1.6 15.9-6.8 19.6-32.5 8.5-58.6-11.2-26.2-32.3-41.3-48.2-34.5z m35.7 83.9c-4.5 1.9-10.7 0.3-17-4.5-7.2-5.5-13.6-14.3-18-24.7-9.5-22.3-6-41.6 3.2-45.5 9.2-3.9 25.5 6.9 35.1 29.2 9.5 22.3 6 41.5-3.3 45.5zM249.8 459c-9.4-7.2-18.9-9.2-27-5.8-8.1 3.4-13.2 11.8-14.6 23.5-1.2 10.7 0.9 23.2 6.1 35.1 5.1 12 12.6 22.2 21.2 28.7 6.4 4.9 12.9 7.4 18.9 7.4 2.8 0 5.5-0.5 8.1-1.6 15.9-6.8 19.6-32.5 8.5-58.6-5.2-11.9-12.7-22.1-21.2-28.7z m8.7 78.2c-4.5 1.9-10.7 0.3-17-4.5-7.2-5.5-13.6-14.3-18-24.7-4.4-10.4-6.3-21.1-5.3-30.1 0.9-7.9 4-13.5 8.5-15.4 1.2-0.5 2.6-0.8 4.1-0.8 3.9 0 8.4 1.8 12.9 5.3 7.2 5.5 13.6 14.3 18 24.7 9.6 22.3 6.1 41.5-3.2 45.5zM408.6 296.7c28.3 0 50.5-14.8 50.5-33.7s-22.2-33.7-50.5-33.7h-0.3c-28.1 0.1-50.2 14.9-50.2 33.7s22 33.6 50.2 33.7h0.3zM368.1 263c0-12.8 18.4-23.6 40.2-23.7h0.3c22 0 40.5 10.9 40.5 23.7s-18.5 23.7-40.5 23.7h-0.3c-21.8-0.1-40.2-10.9-40.2-23.7zM550.1 296.7c28.3 0 50.5-14.8 50.5-33.7s-22.2-33.7-50.5-33.7-50.5 14.8-50.5 33.7 22.2 33.7 50.5 33.7z m0-57.4c22 0 40.5 10.9 40.5 23.7s-18.5 23.7-40.5 23.7-40.5-10.9-40.5-23.7 18.5-23.7 40.5-23.7zM267.2 229.3c-28.3 0-50.5 14.8-50.5 33.7s22.2 33.7 50.5 33.7 50.5-14.8 50.5-33.7-22.2-33.7-50.5-33.7z m0 57.4c-22 0-40.5-10.9-40.5-23.7s18.5-23.7 40.5-23.7 40.5 10.9 40.5 23.7-18.5 23.7-40.5 23.7z" fill="#FFFFFF" p-id="25336"></path><path d="M878.4 465.9H731.3V304.4c0-11.1-2.5-22.1-7.3-32l0.1-0.1-1.3-2.3c-0.3-0.6-0.7-1.2-1-1.8l-2.8-5-0.3 0.2c-6.1-9-14-16.7-23.2-22.2L446.7 89.6c-11.5-7.1-24.8-10.8-38.5-10.8-13.6 0-26.9 3.7-38.5 10.8L120.9 241.1c-9.3 5.6-17.2 13.2-23.2 22.2l-0.2-0.2-2.8 5c-0.4 0.8-0.8 1.5-1.2 2.3l-1 1.9 0.1 0.1c-4.8 10-7.3 21-7.3 32v308.7c0 25.8 13.7 50.1 35.7 63.4l248.9 150.9c10.1 6.2 21.6 9.8 33.4 10.6v0.3h5c13.6 0 26.9-3.7 38.4-10.7l11.8-7.2v65.4c0 33.2 27.1 60.3 60.3 60.3h91.8l0.5-0.1c22.2-5 44.6-12 66.6-20.8 7.6-2.9 15.3-6.3 23-9.9 30.9-14.4 60.2-32.6 87.1-53.9l4.2-3.4c7-5.7 14.2-12 22.1-19.2 13.2-12.3 25.6-25.3 37-38.6l3.5-4.1c38.5-46.5 66.7-99.1 83.8-156.5l0.2-0.7V526.2c0.1-33.2-27-60.3-60.2-60.3zM126.1 249.7L374.9 98.2c10.1-6.1 21.6-9.4 33.3-9.4 11.9 0 23.4 3.2 33.3 9.4l248.9 151.5c8.1 4.9 15 11.6 20.3 19.5L440.2 448.1c-9.5 6.3-20.6 9.6-31.9 9.6-11.3 0-22.3-3.3-31.8-9.6L105.9 269.2c5.2-7.9 12.1-14.6 20.2-19.5z m249 569.1L126.2 667.9c-19.1-11.5-30.9-32.5-30.9-54.8V304.4c0-9.1 2-18.2 5.7-26.4l270 178.5c9.8 6.4 20.9 10.2 32.3 11v360.4c-10-0.8-19.7-3.9-28.2-9.1z m83.4-292.6v282.4l-17 10.3c-8.5 5.2-18.2 8.3-28.2 9.1V467.5c11.5-0.8 22.6-4.6 32.4-11L715.6 278c3.7 8.3 5.7 17.3 5.7 26.4v161.5H518.9c-5.7 0-11.1 0.7-16 2.1-5.2 1.5-10 3.5-14.3 6-9.1 5.3-16.6 12.8-21.8 21.7-5.4 9.1-8.3 19.7-8.3 30.5z m344.9 308.7c-0.3 0.3-0.6 0.5-0.9 0.8-1.3 1.1-2.5 2.3-3.8 3.4-0.2 0.2-0.4 0.4-0.6 0.5-1.1 0.9-2.1 1.9-3.2 2.8-0.3 0.3-0.6 0.5-0.9 0.8-1.2 1-2.3 2-3.5 3-0.1 0.1-0.2 0.2-0.3 0.2-2.4-4.9-3.6-10.3-3.6-15.9 0-20.1 16.4-36.5 36.6-36.5h0.4c5.7 0 11.3 1.3 16.3 3.9l-0.3 0.3c-0.4 0.4-0.8 0.9-1.2 1.3-1 1.1-2 2.2-2.9 3.3-0.5 0.5-1 1.1-1.5 1.6-0.9 1-1.8 2-2.7 2.9-0.5 0.6-1.1 1.2-1.6 1.7-0.9 0.9-1.8 1.9-2.6 2.8-0.6 0.6-1.1 1.2-1.7 1.8l-2.7 2.7c-0.6 0.6-1.1 1.2-1.7 1.8-0.9 0.9-1.8 1.9-2.8 2.8l-1.7 1.7c-1 1-2 2-3.1 3-0.5 0.5-1 0.9-1.4 1.4-1.5 1.4-3 2.9-4.5 4.3-1.4 1.2-2.7 2.4-4.1 3.6z m125.3-197.6c-16.8 56.1-44.5 107.5-82.3 152.9-7-4.1-15-6.3-23.3-6.2-25.6 0-46.5 20.9-46.5 46.5 0 7.9 2 15.5 5.7 22.3-26.5 21.1-55.4 39-85.9 53.2-7.5 3.5-15 6.8-22.4 9.7-21.4 8.6-43.1 15.4-64.6 20.2h-90.6c-27.7 0-50.3-22.6-50.3-50.3V526.2c0-9 2.4-17.8 7-25.5 4.3-7.4 10.6-13.7 18.2-18.1 3.6-2.1 7.6-3.8 11.9-5 4-1.1 8.5-1.7 13.2-1.7h359.5c27.7 0 50.3 22.6 50.3 50.3v111.1z" fill="#FFFFFF" p-id="25337"></path><path d="M698.6 659.5c-25.6 0-46.5 20.9-46.5 46.5s20.9 46.5 46.5 46.5 46.5-20.9 46.5-46.5-20.9-46.5-46.5-46.5z m0 83c-20.1 0-36.5-16.4-36.5-36.5s16.4-36.5 36.5-36.5 36.5 16.4 36.5 36.5-16.4 36.5-36.5 36.5zM574.2 535c-25.6 0-46.5 20.9-46.5 46.5s20.9 46.5 46.5 46.5 46.5-20.9 46.5-46.5-20.9-46.5-46.5-46.5z m0 83c-20.1 0-36.5-16.4-36.5-36.5s16.4-36.5 36.5-36.5 36.5 16.4 36.5 36.5-16.4 36.5-36.5 36.5zM574.2 783.9c-25.6 0-46.5 20.9-46.5 46.5s20.9 46.5 46.5 46.5 46.5-20.9 46.5-46.5-20.9-46.5-46.5-46.5z m0 83c-20.1 0-36.5-16.4-36.5-36.5s16.4-36.5 36.5-36.5 36.5 16.4 36.5 36.5-16.4 36.5-36.5 36.5zM823.1 535c-25.6 0-46.5 20.9-46.5 46.5s20.9 46.5 46.5 46.5 46.5-20.9 46.5-46.5-20.9-46.5-46.5-46.5z m0 83c-20.1 0-36.5-16.4-36.5-36.5S803 545 823.1 545s36.5 16.4 36.5 36.5-16.4 36.5-36.5 36.5z" fill="#FFFFFF" p-id="25338"></path><path d="M511.9 972c-64.6 0-127.1-13.1-185.7-39.1-56.6-25-106.9-60.7-149.5-106-7.6-8.1-7.2-20.7 0.9-28.3 8.1-7.6 20.7-7.2 28.3 0.9 38.9 41.4 84.8 74 136.5 96.8C395.9 920 452.9 932 511.9 932c31.7 0 63.2-3.5 93.6-10.5 20.9-4.7 42.1-11.3 62.9-19.7 0.1 0 0.1 0 0.2-0.1 7-2.7 14.2-5.8 21.4-9.2 30.7-14.4 59.7-32.6 86.3-54.1 6.6-5.3 13.4-11.3 20.9-18.2 12.5-11.6 24.2-23.9 34.9-36.5 38-44.8 65.8-95.8 82.4-151.5C926.1 593.4 932 553 932 512c0-33.9-4-67.5-11.9-100-10.6-43.7-28.2-85.1-52.1-123.2-62.6-99.6-164.5-168.9-279.7-190-10.9-2-18.1-12.4-16.1-23.3s12.4-18.1 23.3-16.1c126.2 23.1 237.8 99 306.3 208 26.2 41.7 45.4 87.2 57.1 135 8.7 35.5 13.1 72.3 13.1 109.4 0 44.8-6.4 89.1-19.1 131.7-18.2 61.1-48.6 117-90.2 166-11.8 13.8-24.6 27.2-38.2 39.9l-0.1 0.1c-8.1 7.4-15.6 13.9-22.8 19.8-29.1 23.6-60.8 43.5-94.4 59.2-7.9 3.7-16 7.2-23.8 10.3-22.8 9.1-45.9 16.4-68.9 21.5-33.4 7.8-67.9 11.7-102.6 11.7z m298.9-137z" fill="#FFD071" p-id="25339"></path></svg>';
_ui.svg.x = "";
//用flower表示当前不是你的回合
_ui.svg.flower =
	'<svg t="1695707208600" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="59923" width="200" height="200"><path d="M512 0c282.76736 0 512 229.23264 512 512s-229.23264 512-512 512S0 794.76736 0 512 229.23264 0 512 0z" fill="#3DB39E" p-id="59924"></path><path d="M491.52 839.68h40.96v184.32h-40.96V839.68z" fill="#2B7D6E" p-id="59925"></path><path d="M491.52 839.68h40.96v56.32h-40.96V839.68z" fill="#256A5E" p-id="59926"></path><path d="M715.22304 514.52928c-11.264-4.096-22.39488-7.34208-33.28-9.94304a302.1312 302.1312 0 0 0 32.28672-12.8c72.00768-33.56672 117.68832-88.04352 102.02112-121.64096-15.6672-33.60768-86.75328-33.62816-158.76096-0.06144a299.2128 299.2128 0 0 0-30.55616 16.50688 306.8928 306.8928 0 0 0 13.78304-31.87712c27.17696-74.67008 20.96128-145.47968-13.8752-158.1568s-85.11488 37.56032-112.30208 112.22016c-4.096 11.264-7.34208 22.39488-9.94304 33.29024a303.44192 303.44192 0 0 0-12.8-32.28672c-33.56672-72.01792-88.04352-117.69856-121.64096-102.03136-33.60768 15.6672-33.62816 86.75328-0.06144 158.7712a300.29824 300.29824 0 0 0 16.50688 30.55616 303.98464 303.98464 0 0 0-31.88736-13.79328c-74.65984-27.16672-145.46944-20.96128-158.14656 13.8752-12.68736 34.83648 37.56032 85.11488 112.22016 112.30208 11.264 4.096 22.39488 7.35232 33.29024 9.94304a303.58528 303.58528 0 0 0-32.29696 12.8c-72.00768 33.57696-117.68832 88.04352-102.02112 121.6512 15.6672 33.59744 86.75328 33.62816 158.7712 0.0512a300.0832 300.0832 0 0 0 30.54592-16.49664 305.94048 305.94048 0 0 0-13.78304 31.87712c-27.16672 74.65984-20.96128 145.46944 13.8752 158.14656 34.83648 12.68736 85.11488-37.56032 112.30208-112.22016 4.096-11.264 7.34208-22.39488 9.94304-33.28a302.1312 302.1312 0 0 0 12.8 32.28672c33.56672 72.00768 88.04352 117.68832 121.64096 102.02112 33.60768-15.6672 33.62816-86.75328 0.06144-158.76096a299.38688 299.38688 0 0 0-16.50688-30.5664c10.01472 5.0176 20.6336 9.68704 31.88736 13.79328 74.65984 27.17696 145.46944 20.97152 158.14656-13.8752 12.68736-34.83648-37.56032-85.12512-112.22016-112.30208z m-182.95808 40.93952c-7.59808 3.54304-13.39392 10.0352-17.55136 18.61632-4.90496-8.18176-11.23328-14.15168-19.10784-17.01888s-16.56832-2.36544-25.58976 0.74752c2.33472-9.24672 2.06848-17.95072-1.47456-25.5488s-10.0352-13.39392-18.62656-17.5616c8.192-4.90496 14.16192-11.23328 17.02912-19.10784s2.36544-16.56832-0.75776-25.58976c9.25696 2.33472 17.96096 2.06848 25.55904-1.47456s13.39392-10.0352 17.55136-18.61632c4.90496 8.18176 11.23328 14.15168 19.10784 17.01888s16.57856 2.36544 25.58976-0.75776c-2.33472 9.25696-2.06848 17.96096 1.47456 25.55904s10.0352 13.39392 18.62656 17.5616c-8.192 4.89472-14.16192 11.23328-17.02912 19.10784s-2.36544 16.56832 0.75776 25.58976c-9.2672-2.32448-17.96096-2.07872-25.55904 1.47456z m182.95808-40.93952c-11.264-4.096-22.39488-7.34208-33.28-9.94304a302.1312 302.1312 0 0 0 32.28672-12.8c72.00768-33.56672 117.68832-88.04352 102.02112-121.64096-15.6672-33.60768-86.75328-33.62816-158.76096-0.06144a299.2128 299.2128 0 0 0-30.55616 16.50688 306.8928 306.8928 0 0 0 13.78304-31.87712c27.17696-74.67008 20.96128-145.47968-13.8752-158.1568s-85.11488 37.56032-112.30208 112.22016c-4.096 11.264-7.34208 22.39488-9.94304 33.29024a303.44192 303.44192 0 0 0-12.8-32.28672c-33.56672-72.01792-88.04352-117.69856-121.64096-102.03136-33.60768 15.6672-33.62816 86.75328-0.06144 158.7712a300.29824 300.29824 0 0 0 16.50688 30.55616 303.98464 303.98464 0 0 0-31.88736-13.79328c-74.65984-27.16672-145.46944-20.96128-158.14656 13.8752-12.68736 34.83648 37.56032 85.11488 112.22016 112.30208 11.264 4.096 22.39488 7.35232 33.29024 9.94304a303.58528 303.58528 0 0 0-32.29696 12.8c-72.00768 33.57696-117.68832 88.04352-102.02112 121.6512 15.6672 33.59744 86.75328 33.62816 158.7712 0.0512a300.0832 300.0832 0 0 0 30.54592-16.49664 305.94048 305.94048 0 0 0-13.78304 31.87712c-27.16672 74.65984-20.96128 145.46944 13.8752 158.14656 34.83648 12.68736 85.11488-37.56032 112.30208-112.22016 4.096-11.264 7.34208-22.39488 9.94304-33.28a302.1312 302.1312 0 0 0 12.8 32.28672c33.56672 72.00768 88.04352 117.68832 121.64096 102.02112 33.60768-15.6672 33.62816-86.75328 0.06144-158.76096a299.38688 299.38688 0 0 0-16.50688-30.5664c10.01472 5.0176 20.6336 9.68704 31.88736 13.79328 74.65984 27.17696 145.46944 20.97152 158.14656-13.8752 12.68736-34.83648-37.56032-85.12512-112.22016-112.30208z" fill="#D7B354" p-id="59927"></path><path d="M870.4 512c0-39.58784-68.77184-71.68-153.6-71.68-12.78976 0-25.1392 0.80896-37.0176 2.18112a321.30048 321.30048 0 0 0 27.71968-24.6272c59.98592-59.97568 85.92384-131.29728 57.92768-159.30368-27.99616-27.98592-99.30752-2.048-159.30368 57.92768a319.6928 319.6928 0 0 0-24.6272 27.72992c1.37216-11.8784 2.18112-24.23808 2.18112-37.02784 0-84.82816-32.09216-153.6-71.68-153.6s-71.68 68.77184-71.68 153.6c0 12.78976 0.80896 25.1392 2.18112 37.0176a321.30048 321.30048 0 0 0-24.6272-27.71968c-59.97568-59.97568-131.29728-85.92384-159.30368-57.92768-27.98592 27.99616-2.048 99.31776 57.92768 159.30368a319.5904 319.5904 0 0 0 27.71968 24.6272A322.19136 322.19136 0 0 0 307.2 440.32c-84.82816 0-153.6 32.09216-153.6 71.68s68.77184 71.68 153.6 71.68c12.78976 0 25.1392-0.80896 37.0176-2.18112a321.30048 321.30048 0 0 0-27.71968 24.6272c-59.97568 59.98592-85.92384 131.30752-57.92768 159.30368 27.99616 27.98592 99.31776 2.05824 159.30368-57.92768a319.5904 319.5904 0 0 0 24.6272-27.71968A322.19136 322.19136 0 0 0 440.32 716.8c0 84.82816 32.09216 153.6 71.68 153.6s71.68-68.77184 71.68-153.6c0-12.78976-0.80896-25.1392-2.18112-37.0176a321.30048 321.30048 0 0 0 24.6272 27.71968c59.98592 59.98592 131.29728 85.92384 159.30368 57.92768 27.98592-27.98592 2.05824-99.30752-57.92768-159.30368a319.5904 319.5904 0 0 0-27.71968-24.6272c11.8784 1.37216 24.22784 2.18112 37.0176 2.18112 84.82816 0 153.6-32.09216 153.6-71.68z m-383.78496 61.29664c-1.05472-10.12736-4.48512-18.75968-10.81344-25.088s-14.97088-9.76896-25.09824-10.81344c6.42048-7.90528 10.09664-16.4352 10.09664-25.3952 0-8.94976-3.67616-17.48992-10.09664-25.38496 10.12736-1.04448 18.76992-4.48512 25.09824-10.81344s9.76896-14.97088 10.81344-25.09824c7.89504 6.42048 16.4352 10.09664 25.38496 10.09664s17.48992-3.67616 25.38496-10.09664c1.04448 10.12736 4.48512 18.76992 10.81344 25.09824s14.97088 9.76896 25.09824 10.81344C566.87616 494.51008 563.2 503.05024 563.2 512c0 8.96 3.67616 17.48992 10.09664 25.3952-10.12736 1.04448-18.76992 4.48512-25.09824 10.81344s-9.75872 14.96064-10.81344 25.088C529.48992 566.87616 520.94976 563.2 512 563.2s-17.48992 3.67616-25.38496 10.09664zM870.4 512c0-39.58784-68.77184-71.68-153.6-71.68-12.78976 0-25.1392 0.80896-37.0176 2.18112a321.30048 321.30048 0 0 0 27.71968-24.6272c59.98592-59.97568 85.92384-131.29728 57.92768-159.30368-27.99616-27.98592-99.30752-2.048-159.30368 57.92768a319.6928 319.6928 0 0 0-24.6272 27.72992c1.37216-11.8784 2.18112-24.23808 2.18112-37.02784 0-84.82816-32.09216-153.6-71.68-153.6s-71.68 68.77184-71.68 153.6c0 12.78976 0.80896 25.1392 2.18112 37.0176a321.30048 321.30048 0 0 0-24.6272-27.71968c-59.97568-59.97568-131.29728-85.92384-159.30368-57.92768-27.98592 27.99616-2.048 99.31776 57.92768 159.30368a319.5904 319.5904 0 0 0 27.71968 24.6272A322.19136 322.19136 0 0 0 307.2 440.32c-84.82816 0-153.6 32.09216-153.6 71.68s68.77184 71.68 153.6 71.68c12.78976 0 25.1392-0.80896 37.0176-2.18112a321.30048 321.30048 0 0 0-27.71968 24.6272c-59.97568 59.98592-85.92384 131.30752-57.92768 159.30368 27.99616 27.98592 99.31776 2.05824 159.30368-57.92768a319.5904 319.5904 0 0 0 24.6272-27.71968A322.19136 322.19136 0 0 0 440.32 716.8c0 84.82816 32.09216 153.6 71.68 153.6s71.68-68.77184 71.68-153.6c0-12.78976-0.80896-25.1392-2.18112-37.0176a321.30048 321.30048 0 0 0 24.6272 27.71968c59.98592 59.98592 131.29728 85.92384 159.30368 57.92768 27.98592-27.98592 2.05824-99.30752-57.92768-159.30368a319.5904 319.5904 0 0 0-27.71968-24.6272c11.8784 1.37216 24.22784 2.18112 37.0176 2.18112 84.82816 0 153.6-32.09216 153.6-71.68z" fill="#EFC75E" p-id="59928"></path><path d="M512 399.36c62.208 0 112.64 50.432 112.64 112.64s-50.432 112.64-112.64 112.64-112.64-50.432-112.64-112.64 50.432-112.64 112.64-112.64z" fill="#E3BD59" p-id="59929"></path><path d="M512 430.08a81.92 81.92 0 1 1 0 163.84 81.92 81.92 0 0 1 0-163.84z" fill="#C88B4A" p-id="59930"></path></svg>';
//dollar表示现在是下注时间
_ui.svg.dollar =
	'<svg t="1695707022815" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="54699" width="200" height="200"><path d="M1005.63552 338.752l-320-320a64.064 64.064 0 0 0-106.432 26.304c-14.496 47.008-39.552 87.872-76.64 124.928-49.536 49.504-114.048 87.008-182.304 126.656-72.448 41.984-147.296 85.504-208.64 146.816C59.49152 495.648 24.00352 553.696 3.20352 621.088a64.064 64.064 0 0 0 15.872 64.192l320 320a64.064 64.064 0 0 0 106.432-26.368c14.528-47.008 39.584-87.872 76.704-124.928 49.504-49.504 113.984-86.944 182.304-126.56 72.384-42.048 147.264-85.568 208.576-146.88 52.128-52.128 87.616-110.24 108.448-177.632a64.128 64.128 0 0 0-15.904-64.16zM384.35552 960L64.35552 640c90.944-294.432 485.12-281.568 576-576l320.064 320C869.44352 678.368 475.26752 665.568 384.35552 960z" fill="#FF6347" p-id="54700"></path><path d="M626.33952 476.8c-10.432-8.736-20.928-14.688-31.488-17.632a91.648 91.648 0 0 0-31.616-3.36 113.28 113.28 0 0 0-32 7.328 439.36 439.36 0 0 0-32.448 14.016 1818.176 1818.176 0 0 0-51.552-57.376c7.744-7.008 15.264-10.56 22.496-10.816 7.264-0.32 14.24 0.448 20.864 2.112 6.752 1.696 12.928 3.136 18.624 4.256a17.216 17.216 0 0 0 15.136-3.808 21.248 21.248 0 0 0 7.552-15.424c0.32-6.304-2.048-12.448-7.328-18.432a41.376 41.376 0 0 0-24.64-14.176 76.064 76.064 0 0 0-29.76 0.672c-10.112 2.304-19.744 6.112-28.864 11.488s-16.448 10.88-21.888 16.256l-6.24-5.888a12.032 12.032 0 0 0-8.64-3.2 11.2 11.2 0 0 0-8.736 4.256 11.52 11.52 0 0 0-2.944 9.12 11.52 11.52 0 0 0 4.064 8.064c2.08 1.76 4.16 3.488 6.24 5.312-8.192 9.888-14.944 20.8-20.256 32.32a108.032 108.032 0 0 0-9.76 34.112c-1.248 11.2-0.064 21.44 3.36 30.944 3.424 9.568 9.76 17.696 19.008 25.376 15.072 12.512 32.8 17.824 53.376 16.64 20.512-1.248 42.624-7.36 66.4-20.128 18.88 21.824 37.824 43.488 56.736 63.616-8 6.752-15.008 10.624-21.184 11.872a33.12 33.12 0 0 1-16.672-0.32 53.024 53.024 0 0 1-13.888-6.688 97.536 97.536 0 0 0-12.64-7.488c-4.128-2.048-8.384-3.2-12.736-3.264s-8.992 2.048-14.112 6.432c-5.248 4.576-7.872 9.888-7.872 15.872 0 5.952 2.752 12 8.128 18.112 5.44 6.112 12.512 11.264 21.056 15.328s18.208 6.624 28.832 7.328a80 80 0 0 0 33.632-5.248c11.872-4.32 23.616-12.128 35.2-23.744 5.568 5.44 11.2 10.624 16.8 15.616a11.52 11.52 0 0 0 8.736 2.816 11.616 11.616 0 0 0 8.64-4.512 12.352 12.352 0 0 0 3.008-9.376 10.912 10.912 0 0 0-4-7.808 419.2 419.2 0 0 1-16.864-14.24c9.568-11.744 17.248-24.128 22.944-36.384 5.696-12.32 9.056-24.192 10.176-35.2a62.88 62.88 0 0 0-3.808-30.112c-3.584-9.184-9.952-17.056-19.072-24.64z m-178.912 21.696a31.072 31.072 0 0 1-23.872-9.312 23.456 23.456 0 0 1-6.24-10.304 32.128 32.128 0 0 1-1.248-13.376c0.448-4.8 1.888-9.824 4.384-14.88 2.368-5.056 5.888-10.112 10.368-15.008a1141.344 1141.344 0 0 1 48.64 52.128c-12.288 6.752-22.976 10.368-32.032 10.752z m150.944 64.064c-2.88 5.312-6.176 10.048-10.048 14.176a1307.616 1307.616 0 0 1-53.76-58.432c4.576-2.048 9.376-4.192 14.56-6.368s10.368-3.616 15.552-4.512c5.312-0.8 10.56-0.576 15.808 0.672 5.184 1.312 10.112 4.128 14.688 8.576 4.512 4.512 7.36 9.184 8.512 14.24 1.248 5.12 1.312 10.304 0.448 15.616a51.584 51.584 0 0 1-5.76 16.032zM471.29952 709.76h-0.064a574.4 574.4 0 0 0-57.6 49.696 467.584 467.584 0 0 0-46.752 54.368l-21.888 29.888 0.064 0.064a16.096 16.096 0 0 0 2.112 20.064 16.128 16.128 0 0 0 22.72 0 15.04 15.04 0 0 0 2.368-3.2l20.448-28c12.672-17.312 27.328-34.368 43.552-50.56a507.52 507.52 0 0 1 54.848-47.2l-0.064-0.064c0.576-0.448 1.12-0.8 1.632-1.312a16 16 0 0 0-21.376-23.744zM588.45152 246.88c-16.736 16.736-34.88 31.808-53.696 46.176a16.192 16.192 0 0 0-3.744 25.632c6.112 6.176 16 6.304 22.368 0.448l0.128 0.064c20-15.36 39.488-31.616 57.568-49.696a470.176 470.176 0 0 0 46.752-54.304l21.888-30.016-0.064-0.064a16.128 16.128 0 0 0-23.616-21.888 17.44 17.44 0 0 0-2.816 3.936l-21.248 29.12a432.448 432.448 0 0 1-43.52 50.592z" fill="#FF6347" p-id="54701"></path></svg>';
//赢家用微笑的太阳表示
_ui.svg.sun =
	'<svg t="1695736493765" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14120" width="200" height="200"><path d="M304.5 691.8c0-145.3 117.8-263 263-263s263 117.8 263 263" fill="#FDDA09" p-id="14121"></path><path d="M567.5 428.8c-16.7 0-32.9 1.7-48.7 4.7 122 22.9 214.3 129.7 214.3 258.3h97.4c0.1-145.2-117.7-263-263-263z" fill="#FDA906" p-id="14122"></path><path d="M772.1 687.3c-8.3 0-15-6.7-15-15 0-66.2-25.8-128.5-72.6-175.4-46.8-46.8-109.1-72.6-175.4-72.6-66.2 0-128.5 25.8-175.4 72.6-46.8 46.8-72.6 109.1-72.6 175.4 0 8.3-6.7 15-15 15s-15-6.7-15-15c0-74.3 28.9-144.1 81.4-196.6 52.5-52.5 122.3-81.4 196.6-81.4s144.1 28.9 196.6 81.4c52.5 52.5 81.4 122.3 81.4 196.6 0 8.3-6.7 15-15 15z" fill="" p-id="14123"></path><path d="M914.1 704.5H120c-8.3 0-15-6.7-15-15s6.7-15 15-15h794.1c8.3 0 15 6.7 15 15s-6.7 15-15 15zM755.2 777.4H278.8c-8.3 0-15-6.7-15-15s6.7-15 15-15h476.5c8.3 0 15 6.7 15 15s-6.8 15-15.1 15zM605.6 858.1H428.5c-8.3 0-15-6.7-15-15s6.7-15 15-15h177.1c8.3 0 15 6.7 15 15s-6.8 15-15 15zM179.4 641h-63.5c-8.3 0-15-6.7-15-15s6.7-15 15-15h63.5c8.3 0 15 6.7 15 15s-6.7 15-15 15zM515.9 323.4c-8.3 0-15-6.7-15-15V181.3c0-8.3 6.7-15 15-15s15 6.7 15 15v127.1c0 8.3-6.7 15-15 15zM271 422.9c-3.8 0-7.7-1.5-10.6-4.4l-56.2-56.2c-5.9-5.9-5.9-15.4 0-21.2 5.9-5.9 15.4-5.9 21.2 0l56.2 56.2c5.9 5.9 5.9 15.4 0 21.2-2.9 3-6.8 4.4-10.6 4.4zM754.8 422.9c-3.8 0-7.7-1.5-10.6-4.4-5.9-5.9-5.9-15.4 0-21.2l56.2-56.2c5.9-5.9 15.4-5.9 21.2 0 5.9 5.9 5.9 15.4 0 21.2l-56.2 56.2c-2.9 3-6.7 4.4-10.6 4.4z" fill="" p-id="14124"></path><path d="M441.2 544.2a18.8 17.8 0 1 0 37.6 0 18.8 17.8 0 1 0-37.6 0Z" fill="#050400" p-id="14125"></path><path d="M553.9 544.2a18.8 17.8 0 1 0 37.6 0 18.8 17.8 0 1 0-37.6 0Z" fill="#050400" p-id="14126"></path><path d="M491.3 577.5c0 13.1 11.2 23.7 25 23.7s25-10.6 25-23.7h-50z" fill="#050400" p-id="14127"></path><path d="M406.9 588.6a21.9 20.7 0 1 0 43.8 0 21.9 20.7 0 1 0-43.8 0Z" fill="#FDA906" p-id="14128"></path><path d="M582.1 588.6a21.9 20.7 0 1 0 43.8 0 21.9 20.7 0 1 0-43.8 0Z" fill="#FDA906" p-id="14129"></path></svg>';
//最终赢家用幸福的笑脸表示
_ui.svg.happy =
	'<svg t="1695745146354" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6278" width="200" height="200"><path d="M511.968 959.936c298.688 0 447.968-200.576 447.968-448 0-247.36-149.28-447.936-448-447.936C213.28 64 64 264.576 64 511.968c0 247.392 149.248 447.968 447.968 447.968z" fill="#FFB02E" p-id="6279"></path><path d="M287.424 358.08c1.536-7.872 5.056-17.6 11.744-24.864 5.76-6.272 15.936-13.216 36.8-13.216 20.576 0 31.04 7.104 37.056 13.728 6.976 7.68 10.336 17.44 11.456 23.744a32 32 0 0 0 63.04-10.944 113.408 113.408 0 0 0-27.2-55.904C402.016 270.464 374.272 256 336 256c-37.888 0-65.504 13.792-83.968 33.92-17.536 19.072-24.608 41.376-27.456 56a32 32 0 1 0 62.848 12.16zM639.424 358.08c1.536-7.872 5.056-17.6 11.744-24.864 5.76-6.272 15.936-13.216 36.832-13.216 20.544 0 31.008 7.104 37.024 13.728 7.008 7.68 10.368 17.44 11.456 23.744a32 32 0 0 0 63.04-10.944 113.376 113.376 0 0 0-27.2-55.904C754.016 270.464 726.272 256 688 256c-37.888 0-65.504 13.792-83.968 33.92-17.536 19.072-24.608 41.376-27.424 56a32 32 0 1 0 62.816 12.16zM384 480a32 32 0 0 1 32 32c0 16.224 5.12 41.248 19.552 61.312C448.832 591.68 471.232 608 512 608c40.768 0 63.168-16.288 76.448-34.688 14.4-20.064 19.552-45.12 19.552-61.312a32 32 0 1 1 64 0c0 26.464-7.68 65.408-31.616 98.688C615.232 645.6 573.632 672 512 672c-61.632 0-103.232-26.4-128.352-61.312C359.648 577.408 352 538.464 352 512a32 32 0 0 1 32-32z" fill="#402A32" p-id="6280"></path><path d="M96 35.2c38.816-11.52 80 12.8 96 28.8 16-16 69.376-58.624 120-8C352.8 96.8 336 160 304 208c-18.848 28.256-67.712 72.704-107.104 102.72-20.608 15.68-49.28 11.04-66.752-8.096C100.576 270.208 63.136 228.64 44.8 192c-32-64 0-141.6 51.2-156.8zM128 896c-35.776-35.776-48-96-16-128s96-16 96-16 16-40 64-32c64 8 72 80 56 128-12.224 36.672-41.824 75.808-63.36 100.992-13.792 16.192-37.344 18.56-54.944 6.528C180.096 935.36 138.112 906.112 128 896zM848 592c-10.656-16-64-60.8-112-44.8-60.704 20.256-64 92.8-32 140.8 20 30.016 76.544 97.088 107.36 133.12a30.592 30.592 0 0 0 44.192 2.88C894.08 788.352 968.64 714.432 992 656c17.824-44.576 0-112-64-112-51.2 0-74.656 32-80 48z" fill="#F70A8D" p-id="6281"></path></svg>';
//动态改变宽高比
screenWH = () => {
	const scale = 19 / 9;
	var edit_box_dom = document.getElementById("mainTable");
	var parent = edit_box_dom.parentElement;
	box_height = parent.getBoundingClientRect().height;
	box_width = parent.getBoundingClientRect().width;
	// console.log(box_height,box_width)
	if (scale <= box_width / box_height) {
		edit_box_dom.style.width = `${box_height * scale}px`; // 计算宽
		edit_box_dom.style.height = `${box_height}px`; // 计算高
	} else {
		edit_box_dom.style.width = `${box_width}px`;
		edit_box_dom.style.height = `${box_width / scale}px`;
	}
};

//player对象
class Player {
	dom_avatar = null; //对应player_list中的dom对象
	avatar_img = "./staic/img/cats/miao" + parseInt(Math.random() * 5160) + ".jpg"; //随机分配头像
	dices = [
		parseInt(Math.random() * 6 + 1),
		parseInt(Math.random() * 6 + 1),
		parseInt(Math.random() * 6 + 1),
		parseInt(Math.random() * 6 + 1),
		parseInt(Math.random() * 6 + 1)
	]; //5个骰子的点数
	locked_dices = []; //如[0,2]表示第一第三骰子是锁定的
	money = 1000; //筹码，英语水平不行翻译成money
	is_local = true; //是否本地玩家（区分原程联机玩家）
	is_ai = false; //是否人机托管
	ipAddr = ["", ""]; //端口号，IP地址
	id = 0; //init时分配为当前的_status.players.length
	countScores = () => {
		return calculateScores(this.dices);
	};
}

//返回一个player
init_player = () => {
	var player = new Player();
	player.id = _status.players.length;
	return player;
};

//初始化游戏
game_init = () => {
	// close_startPage();

	// 修不了BUG就砍需求
	// VanillaTilt.init(document.querySelectorAll(".card_startPage"),{
	// 	max: 5,  //最大倾斜度数
	// 	speed: 400,  //倾斜转换的速度
	// 	glare: true,  //是否开启眩光效果
	// 	"max-glare": 0.3  //最大眩光的不透明度
	// })

	screenWH();
	setInterval(screenWH, 1000);
	setInterval(refrash_controlBar, 10);
	setInterval(refrash_avatars, 10);

	game_randomImg();
	refrash_startPage_game_setting();
	$("#remote_config").hide(1);

	$("#button_add_player").click({ is_ai: false, is_local: true, ipAddr: ["7058", "127.0.0.1"] }, add_player),
	$("#button_add_ai").click({ is_ai: true, is_local: true, ipAddr: ["7058", "127.0.0.1"] }, add_player),
	$("#button_remove_player").click(remove_avatar); //需要更新
	$("#dialog_test_buttom").click(game_addDialog);
	$("#button_chooseImg").click(game_randomImg);
	$("#button_remote").click(game_openRemoteSetting);
	$("#remote_config_exit").click(game_closeRemotePlaySetting);
	// $('#close_startPage').click(game_start)
	$("#startPage_startGame").click(game_start);
	$("#addPhaseNumber").click(game_addPhaseNumber);
	$("#decreasePhaseNumber").click(game_decreasePhaseNumber);
	$("#addInitMoney").click(game_addInitMoney);
	$("#decreaseInitMoney").click(game_decreaseInitMoney);
	$("#player_increaseMagnification").hover(increaseMagnification_hover);
	$("#player_increaseMagnification").click(increaseMagnification_click);
	$("#player_increaseMagnification").mouseleave(changeMagnification_mouseleave);
	$("#player_decreaseMagnification").hover(decreaseMagnification_hover);
	$("#player_decreaseMagnification").click(decreaseMagnification_click);
	$("#player_decreaseMagnification").mouseleave(changeMagnification_mouseleave);
	$(".dropTable_dice").click(dice_click);
	$(".dropTable_control").click(click_dropTable6);
	$(".ai_select_box").click(startPage_ai_select);
};

//初始化选择菜单中的头像
game_randomImg = () => {
	var img = "./staic/img/cats/miao" + parseInt(Math.random() * 5160) + ".jpg"; //随机分配头像
	_status.playerImg = img;
	$("#button_chooseImg_img")
		.empty()
		.append("<img src=" + img + ">");
};
//开始界面选择ai
startPage_ai_select = event => {
	// console.log(event.target)
	var n = event.target.className.charAt(event.target.className.length - 1);
	// console.log(n)// n取值1，2，3，4
	_status.setting.aiDifficulty = n;
	game_log_changeAiSucceed();
	// 需要补充
};

//
game_addPhaseNumber = () => {
	_status.setting.maxPhase++;
	refrash_startPage_game_setting();
};

game_decreasePhaseNumber = () => {
	if(_status.setting.maxPhase == 1)return;
	_status.setting.maxPhase--;
	refrash_startPage_game_setting();
};

game_addInitMoney = () => {
	if (_status.setting.initMoney == 0) {
		_status.setting.initMoney += 1;
		refrash_startPage_game_setting();
		return;
	}
	_status.setting.initMoney += 10 ** parseInt(Math.log10(_status.setting.initMoney) + 0.00001);
	if (_status.setting.initMoney > 999999) {
		_status.setting.initMoney = 999999;
	}
	refrash_startPage_game_setting();
};

game_decreaseInitMoney = () => {
	if (_status.setting.initMoney == 0) {
		return;
	}
	if (_status.setting.initMoney == 999999) {
		_status.setting.initMoney = 900000;
	} else {
		console.log(_status.setting.initMoney, Math.log10(_status.setting.initMoney) - 0.00001, parseInt(Math.log10(_status.setting.initMoney) + 0.00001));
		_status.setting.initMoney -= 10 ** parseInt(Math.log10(_status.setting.initMoney) - 0.00001);
	}
	refrash_startPage_game_setting();
};

//打开远程设置
game_openRemoteSetting = () => {
	$("#remote_config").hide();
	$("#remote_config").animate({ "top": "10%" }, 10);
	$("#remote_config").fadeIn(500);
};

//关闭远程设置
game_closeRemotePlaySetting = () => {
	$("#remote_config").fadeOut(500);
	$("#remote_config").animate({ "top": "100%" }, 10);
};

//设置ai难度成功弹出一个框框
game_log_changeAiSucceed = () => {
	_ui.game_log_changeAiSucceed.stackL++
	$("#setting_succeed").css({ "top": "3%" });
	setTimeout(() => {
		_ui.game_log_changeAiSucceed.stackL--;
		if(_ui.game_log_changeAiSucceed.stackL == 0)
			$("#setting_succeed").css({ "top": "-5%" });
	}, 1000);
};

//开始游戏
game_start = event => {
	if(_status.status_name2 != 'Start'){
		return;
	}
	// console.log(event.target.className)
	if (_status.players.length < 1) return;
	close_startPage();
	_status.status_name2 = "rollDice";
	_status.gameRound = 1;
	// _status.players = _status.players.reverse()//与players_list同步
	sort_players();
	sort_avatar();
	for (var p of _status.players) {
		p.money = _status.setting.initMoney;
	}
	game_set_active_player(_status.players[0]);
	game_rollBegin();
};

//弹出联机选项
game_remote_log = () => {
	$("#remote_config").animate({ top: "-=10%" }, 500);
};

//穷逼去死/(ㄒoㄒ)/~~，将所有没钱的全部置于灰色并移除players
game_qbqs = () => {
	console.log(_status.players);
	for (var i = 0; i < _status.players.length; i++) {
		p = _status.players[i];
		console.log(p);
		if (p.money <= 0) {
			_status.players.splice(i, 1);
			_status.players_die.push(p);
			grey_avatar(p);
			i--;
		}
	}
	// console.log(_status.players)
};

//根据当前activePlayer布置游戏的dropTable
game_rollBegin = () => {
	var p = _status.activePlayer;
	for (var i = 0; i < p.dices.length; ++i) {
		is_grey = false;
		for (var j of p.locked_dices) {
			if (j == i) {
				is_grey = true;
			}
		}
		// console.log(i,p.dices[i],p.locked_dices,is_grey,33)
		ui_changeDice(i, p.dices[i], is_grey);
	}
	if(p.is_ai == true){
		showAiCurtain()
		setTimeout(ai,1500)
	}else{
		hideAiCurtain()
	}
	change_dropTable_control_svg(0);
	setTimeout("_status.status_name = 'wait2roll'", 700);
};

//摇每个人的骰子中未锁定的骰子
game_rollPlayersUnlockDices = () => {
	for (var p of _status.players) {
		// console.log(p.dices)
		for (var j = 0; j < p.dices.length; j++) {
			var flag = true;
			for (var i of p.locked_dices) {
				if (i == j) {
					flag = false;
					break;
				}
			}
			if (flag) {
				p.dices[j] = rand6();
			}
		}
		// p.locked_dices = []
		// console.log(p.dices)
	}
};

//重摇每个人的骰子
game_rollPlayersDices = () => {
	for (var p of _status.players) {
		for (var i = 0; i < p.dices.length; i++) {
			p.dices[i] = parseInt(Math.random() * 6 + 1);
		}
	}
};

//重投被选中的骰子，展示2s后换下一个玩家
//改了，现在是锁定选中的骰子并换到下一名玩家
game_rollDices = () => {
	if (_status.status_name != "wait2roll") {
		return;
	}
	_status.status_name = "rolling";
	var p = _status.activePlayer;
	if (_status.prepareToRoll.length != 0) {
		// for (var i of _status.prepareToRoll) {
		// 	// var n = parseInt(Math.random()*6+1)
		// 	// ui_changeDice(i,n);
		// 	// p.dices[i] = n
		// 	p.dices[i] = 0
		// }
		for (var i of _status.prepareToRoll) {
			p.locked_dices.push(i);
		}
		_status.prepareToRoll = [];
		// setTimeout(()=>{
		game_next();
		// },2000+1300)
	} else {
		game_next();
	}
};

//根据当前activePlayer布置游戏的dropTable
game_changeMagnificationBegin = () => {
	var p = _status.activePlayer;
	for (var i = 0; i < p.dices.length; ++i) {
		is_grey = false;
		for (var j of p.locked_dices) {
			if (j == i) {
				is_grey = true;
			}
		}
		// console.log(i,p.dices[i],p.locked_dices,is_grey,66)
		ui_changeDice(i, p.dices[i], is_grey);
	}
	if(p.is_ai == true){
		showAiCurtain()
		setTimeout(ai,1500)
	}else{
		hideAiCurtain()
	}
	change_dropTable_control_svg(2);
};

//展示本局胜者
game_showWinner = () => {
	var p = _status.activePlayer;
	for (var i = 0; i < p.dices.length; ++i) {
		is_grey = false;
		for (var j of p.locked_dices) {
			if (j == i) {
				// is_grey = true;
			}
		}
		// console.log(i,p.dices[i],p.locked_dices,is_grey,66)
		ui_changeDice(i, p.dices[i], is_grey);
	}
	hideAiCurtain()
	change_dropTable_control_svg(3);
};

//展示最终胜者
game_showFinalWinner = () => {
	var p = _status.activePlayer;
	for (var i = 0; i < p.dices.length; ++i) {
		is_grey = false;
		for (var j of p.locked_dices) {
			if (j == i) {
				// is_grey = true;
			}
		}
		console.log(i, p.dices[i], p.locked_dices, is_grey, 66);
		ui_changeDice(i, p.dices[i], is_grey);
	}
	hideAiCurtain()
	change_dropTable_control_svg(4);
};

//设定倍率并进入下一阶段
game_changeMagnification = () => {
	_status.magnification1 = 0;
	game_next();
};

//结算筹码
game_settleChips = () => {
	sort_players();
	var winner = _status.players[0];
	var winners = [];
	for (var p of _status.players) {
		if (p.countScores() == winner.countScores()) {
			winners.push(p);
		}
	}
	for (var wr of winners) {
		for (var p of _status.players) {
			var m = wr.countScores() - p.countScores();
			m *= _status.magnification;
			wr.money += m;
			p.money -= m;
		}
	}
};

//进入game的下一个阶段
game_next = () => {
	//投骰子阶段
	if (_status.status_name2 == "rollDice") {
		if (_status.get_nextPlayer() != null) {
			game_set_active_player(_status.get_nextPlayer());
			game_rollBegin();
		} else if (_status.gameRound < 3) {
			//进入加筹码阶段
			sort_players();
			sort_avatar();
			game_set_active_player(_status.players[0]);
			_status.status_name = "changeMagnification";
			_status.status_name2 = "changeMagnification";
			game_changeMagnificationBegin();
			// game_rollBegin()
		} else {
			_status.gamePhase++;
			_status.gameRound = 1;
			game_settleChips();
			sort_players();
			sort_avatar();
			game_set_active_player(_status.players[0]);
			_status.status_name2 = "rollDice";
			game_rollBegin();
			// sort_players()
			// sort_avatar()
			// game_set_active_player(_status.players[0])
			// _status.status_name = 'changeMagnification'
			// _status.status_name2 = 'changeMagnification'
			// game_changeMagnificationBegin()
		}
	} else if (_status.status_name2 == "changeMagnification") {
		if (_status.get_nextPlayer() != null) {
			game_set_active_player(_status.get_nextPlayer());
			game_changeMagnificationBegin();
		} else if (_status.gameRound < 2) {
			//开启下一轮摇骰子
			game_rollPlayersUnlockDices();
			_status.gameRound++;
			sort_players();
			sort_avatar();
			game_set_active_player(_status.players[0]);
			_status.status_name2 = "rollDice";
			game_rollBegin();
		} else if (_status.gamePhase < _status.setting.maxPhase) {
			//展示第一名的骰子,淘汰穷逼，开启下一局
			_status.gameRound++;
			game_rollPlayersUnlockDices();
			for (var p of _status.players) {
				p.locked_dices = [];
			}
			game_settleChips();
			sort_players("money");
			sort_avatar("money");
			game_qbqs();
			game_set_active_player(_status.players[0]);
			_status.status_name = "showWinner";
			_status.status_name2 = "showWinner";
			game_showWinner();
			if (_status.players.length > 1) {
				setTimeout(() => {
					_status.gamePhase++;
					_status.gameRound = 1;
					game_rollPlayersDices();
					sort_players();
					sort_avatar();
					game_set_active_player(_status.players[0]);
					_status.status_name2 = "rollDice";
					game_rollBegin();
				}, 4300);
			} else {
				setTimeout(() => {
					game_end();
				}, 4300);
			}
		} else {
			//结束
			_status.gameRound++;
			game_settleChips();
			game_end();
		}
	}
};

//游戏结束
game_end = () => {
	sort_players("money");
	sort_avatar("money");
	_status.status_name2 = 'GameOver'
	game_set_active_player(_status.players[0]);
	game_showFinalWinner();
};

//click_dropTable6的点击事件
click_dropTable6 = () => {
	if (_status.status_name2 == "rollDice") {
		game_rollDices();
	} else if (_status.status_name2 == "changeMagnification") {
		game_changeMagnification();
	} else if(_status.status_name2 == 'GameOver'){
		
	}
};

//重排players
sort_players = key => {
	key = key || "scores";
	var players = _status.players;
	if (key == "money") {
		players.sort((a, b) => {
			if (a.money == b.money) {
				return a.id < b.id ? 1 : -1;
			}
			return a.money < b.money ? 1 : -1;
		});
	} else if (key == "scores") {
		players.sort((a, b) => {
			if (a.countScores() == b.countScores()) {
				return a.id < b.id ? 1 : -1;
			}
			return a.countScores() < b.countScores() ? 1 : -1;
		});
	}
};

//设置当前活跃玩家
game_set_active_player = player => {
	if (_status.activePlayer != null) {
		sleep_avatar(_status.activePlayer);
	}
	active_avatar(player);
	_status.activePlayer = player;
};

//为游戏添加一名玩家
add_player = event => {
	is_ai = event.data.is_ai || false;
	is_local = event.data.is_local || true;
	ipAddr = event.data.ipAddr || ["", ""];
	var player = init_player();
	// console.log(player,typeof player)
	player.is_ai = is_ai;
	player.is_local = is_local;
	player.ipAddr = ipAddr;
	// player.money = parseInt(Math.random()*10000)
	player.money = _status.setting.initMoney;
	player.avatar_img = _status.playerImg;
	game_randomImg();
	add_avatar(player);
	// console.log(_status)
	_status.players.push(player);
	if (is_local) {
		_status.game_me.push(player);
	}
};

//在玩家栏添加一名玩家的栏
add_avatar = player => {
	_status.players_length++;
	_ui.add_avatar_stack++;
	// console.log(player,typeof player)
	$(".player_avatar").animate({ top: "+=10%" }, 300);
	//id写法在考虑移除角色的前提下不好
	$("#players_list").append(
		$(
			'<div class="player_avatar" id="player' +
				_status.players.length +
				'_avatar"> \
									<img src=' +
				player.avatar_img +
				'> \
									<div class="player_scores">\
										<p>🎲' +
				parseInt(player.countScores()) +
				'</p>\
									</div>\
									<div class="player_money">\
										<p>💰' +
				parseInt(player.money) +
				"</p>\
									</div>\
									\
								</div>"
		)
			.hide()
			.fadeIn(300)
			.append($('<div class="switch_ai"></div>').click(switch_aifc))
	);
	player.dom_avatar = $(".player_avatar:last")[0];
	//远程玩家
	if (player.is_local == false) {
		var d = player.dom_avatar;
		d = d.querySelector(".switch_ai");
		$(d).css("background-color", "rgb(0, 154, 255)");
	} else if (player.is_ai == false) {
		var d = player.dom_avatar;
		d = d.querySelector(".switch_ai");
		$(d).css("background-color", "springgreen");
	}
	setTimeout(() => {
		_ui.add_avatar_stack--;
		// console.log(_ui.add_avatar_stack);
		//记得注释掉这行
		// if(_ui.add_avatar_stack == 0){
		// 	VanillaTilt.init(document.querySelectorAll(".player_avatar"),{
		// 		max: 10,  //最大倾斜度数
		// 		speed: 400,  //倾斜转换的速度
		// 		glare: true,  //是否开启眩光效果
		// 		"max-glare": 0.2  //最大眩光的不透明度
		// 	})
		// }
	}, 300 * (_ui.add_avatar_stack + 1));
};

//在玩家栏减少最后一名加入的玩家
remove_avatar = () => {
	_status.players_length--;
	_ui.add_avatar_stack++;
	$(".player_avatar:not(:last-child)").animate({ top: "-=10%" }, 300);
	p = _status.dom2player($(".player_avatar:last")[0])
	$(".player_avatar:last").remove();
	_status.players.splice(_status.players.length - 1,1)
	setTimeout(() => {
		_ui.add_avatar_stack--;
	}, 300 * (_ui.add_avatar_stack + 1));
};

//对玩家栏排序
sort_avatar = key => {
	key = key || "scores";
	players = _status.players.concat();
	if (key == "money") {
		players.sort((a, b) => {
			if (a.money == b.money) {
				return a.id < b.id ? 1 : -1;
			}
			return a.money < b.money ? 1 : -1;
		});
	} else if (key == "scores") {
		players.sort((a, b) => {
			if (a.countScores() == b.countScores()) {
				return a.id < b.id ? 1 : -1;
			}
			return a.countScores() < b.countScores() ? 1 : -1;
		});
	}
	for (var i = 0; i < players.length; i++) {
		p = players[i];
		var dom = p.dom_avatar;
		var pos = 1 + i * 10 + "%";
		$(dom).animate({ top: pos }, 300);
	}
};

//以绿色高亮当前活跃玩家
active_avatar = player => {
	// player = player || _status.players[parseInt(Math.random()*_status.players.length)]
	if (typeof player == "number") {
		player = _status.players[player];
	}
	var dom = player.dom_avatar;
	$(dom).css("background-color", "rgba(169, 254, 230, 0.501)");
};

//取消高亮
sleep_avatar = player => {
	player = player || _status.players[parseInt(Math.random() * _status.players.length)];
	if (typeof player == "number") {
		player = _status.players[player];
	}
	dom = player.dom_avatar;
	$(dom).css("background-color", "rgba(128, 128, 128, 0.447)");
};

//出局玩家头像置为黑白
grey_avatar = player => {
	player = player || _status.players[parseInt(Math.random() * _status.players.length)];
	if (typeof player == "number") {
		player = _status.players[player];
	}
	var dom = player.dom_avatar;
	$(dom).css("filter", "grayscale(100%)");
	$(dom.querySelector(".switch_ai")).css("background-color", "grey");
};

//刷新开始界面的局数和初始筹码
refrash_startPage_game_setting = () => {
	var str1 = _status.setting.maxPhase;
	// if(_status.setting.maxPhase < 10){
	// 	str1 = '0' + _status.setting.maxPhase + ''
	// }
	$("#showPhaseNumber")[0].innerHTML = "<p>共进行" + str1 + "局</p>";
	var str2 = _status.setting.initMoney;
	$("#showInitMoney")[0].innerHTML = "<p>初始筹码:" + str2 + "</p>";
};
//刷新所有player的dom_avatar中的数值的内容
refrash_avatars = () => {
	for (var p of _status.players) {
		var dom = p.dom_avatar;
		var d1 = dom.querySelector(".player_scores");
		var s1 = "🎲" + parseInt(p.countScores());
		var d2 = dom.querySelector(".player_money");
		var s2 = "💰" + parseInt(p.money);
		d1.querySelector("p").innerHTML = s1;
		d2.querySelector("p").innerHTML = s2;
	}
	for (var p of _status.players_die) {
		var dom = p.dom_avatar;
		var d1 = dom.querySelector(".player_scores");
		var s1 = "🎲0";
		var d2 = dom.querySelector(".player_money");
		var s2 = "💰" + parseInt(p.money);
		d1.querySelector("p").innerHTML = s1;
		d2.querySelector("p").innerHTML = s2;
	}
};

//弹出提示框(没写呢)
game_addDialog = () => {
	if (_ui.game_hasDialog) return;
	_ui.game_hasDialog = true;
	$("body").append($('<div id="game_dialog_curtain"></div>').hide().fadeIn(300).click(game_removeDialog));
	$("#game_dialog_curtain").append($('<div id="game_dialog"></div>').click(game_removeDialog));
	$("#game_dialog");
	$("#game_dialog").append($('<buttom id="close_game_dialog"><p>close dialog</p></buttom>').click(game_removeDialog));
};

//点击头像边上小绿点切换托管状态
switch_aifc = event => {
	// console.log($(event.target).css("background-color"));
	p = _status.dom2player(event.target.parentNode)
	if ($(event.target).css("background-color") == "rgb(255, 0, 0)") {
		//退出托管，表现为绿色
		$(event.target).css("background-color", "springgreen");
	} else if ($(event.target).css("background-color") == "rgb(0, 255, 127)") {
		//开启托管，表现为红色
		$(event.target).css("background-color", "red");
		if(_status.activePlayer == p){
			setTimeout(ai,100)
			showAiCurtain()
		}
	}
	p.is_ai = !p.is_ai
};

//刷新上方UI栏
refrash_controlBar = event => {
	var myDate = new Date();
	var hours = myDate.getHours();
	var minutes = myDate.getMinutes();
	var seconds = myDate.getSeconds();
	if (hours < 10) {
		hours = "0" + hours;
	}
	if (minutes < 10) {
		minutes = "0" + minutes;
	}
	if (seconds < 10) {
		seconds = "0" + seconds;
	}
	var now = "";
	if (hours > 12) {
		hours -= 12;
		if (hours < 10) {
			hours = "0" + hours;
		}
		var now = hours + ":" + minutes + ":" + seconds + " PM";
	} else {
		now = hours + ":" + minutes + ":" + seconds + " AM";
	}
	$("#clock").text(now);
	$("#game_Magnification p").text("当前倍率：" + _status.magnification + "倍");
	$("#controlBar_gamePhase").text("当前第" + _status.gamePhase + "/" + _status.setting.maxPhase + "局");
	$("#controlBar_gameRound").text("本局第" + _status.gameRound + "轮");
};

//增加倍率_hover
increaseMagnification_hover = event => {
	if (event.target.tagName == "P") {
		event.target = event.target.parentNode;
	}
	if (_status.magnification1 != 3 && _status.status_name2 == "changeMagnification") {
		$(event.target).css("background-color", "rgba(162, 240, 114, 0.537)");
	} else {
		$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
	}
};

//增加倍率_click
increaseMagnification_click = event => {
	if (_status.status_name2 != "changeMagnification") {
		return;
	}
	if (event.target.tagName == "P") {
		event.target = event.target.parentNode;
	}
	if (_status.magnification1 != 3) {
		_status.magnification1 += 1;
		_status.magnification += 1;
		if (_status.magnification1 == 3) {
			$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
		}
		refrash_controlBar();
	} else {
		$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
	}
};

//减少倍率_hover
decreaseMagnification_hover = event => {
	if (event.target.tagName == "P") {
		event.target = event.target.parentNode;
	}
	if (_status.magnification1 != 0 && _status.status_name2 == "changeMagnification") {
		$(event.target).css("background-color", "rgba(162, 240, 114, 0.537)");
	} else {
		$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
	}
};

//减少倍率_click
decreaseMagnification_click = event => {
	if (_status.status_name2 != "changeMagnification") {
		return;
	}
	if (event.target.tagName == "P") {
		event.target = event.target.parentNode;
	}
	if (_status.magnification1 != 0) {
		_status.magnification1 -= 1;
		_status.magnification -= 1;
		if (_status.magnification1 == 0) {
			$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
		}
		refrash_controlBar();
	} else {
		$(event.target).css("background-color", "rgba(255, 102, 102, 0.542)");
	}
};

//增减倍率_鼠标移出后恢复原来的颜色
changeMagnification_mouseleave = event => {
	if (event.target.tagName == "P") {
		event.target = event.target.parentNode;
	}
	$(event.target).css("background-color", "rgba(42, 235, 206, 0.216)");
};

//移除弹窗
game_removeDialog = () => {
	$("#game_dialog_curtain").fadeOut(500, () => {
		$("#game_dialog_curtain").remove();
	});
	_ui.game_hasDialog = false;
};

//关闭开始界面
close_startPage = () => {
	// if (_ui.add_avatar_stack != 0) {
	// 	return;
	// }
	$(".startPage").fadeOut(700, () => {
		$(".startPage").remove();
	});
	VanillaTilt.init(document.querySelectorAll(".player_avatar"), {
		max: 10, //最大倾斜度数
		speed: 400, //倾斜转换的速度
		glare: true, //是否开启眩光效果
		"max-glare": 0.2 //最大眩光的不透明度
	});
};

//dice的click事件,改变dice的黑白状态，黑白的骰子将被重新投掷
dice_click = event => {
	if (_status.status_name != "wait2roll") {
		return;
	}
	while (event.target.className != "dropTable_dice") {
		event.target = event.target.parentNode;
	}
	// console.log(event.target);
	var dice_id_nums = event.target.parentNode.id.charAt(event.target.parentNode.id.length - 1);
	for (var i of _status.activePlayer.locked_dices) {
		if (i == dice_id_nums) {
			return;
		}
	}
	if (event.target.style.cssText != "filter: grayscale(100%);") {
		$(event.target).css("filter", "grayscale(100%)");
		_status.prepareToRoll.push(dice_id_nums);
	} else if (event.target.style.cssText == "filter: grayscale(100%);") {
		$(event.target).css("filter", "grayscale(0%)");
		for (var i = 0; i < _status.prepareToRoll.length; i++) {
			if (_status.prepareToRoll[i] == dice_id_nums) {
				_status.prepareToRoll.splice(i, 1);
			}
		}
	}
	// console.log(_status.prepareToRoll);
};

//骰子fadeOut后改变自己的点数再fadeIn，恢复彩色
//id对应dropTable的0到4五个骰子，num不填则为随机1到6
ui_changeDice = (id, num, is_grey) => {
	is_grey = is_grey || false;
	num = num || parseInt(Math.random() * 6 + 1);
	if (num > 6 || num < 0) {
		num = parseInt(Math.random() * 6 + 1);
	}
	// console.log(num)
	var element = $("#dropTable" + id);
	var e_child = element[0].querySelector(".dropTable_dice");
	// console.log(e_child)
	$(e_child).fadeOut(600, () => {
		//清空点数
		$(e_child).empty();

		//恢复彩色
		$(e_child).css("filter", "grayscale(0%)");
		if (is_grey) {
			$(e_child).css("filter", "grayscale(100%)");
		}
		//改变骰子点数
		for (var i = 0; i < num; ++i) {
			$(e_child).append('<div class="c' + num + "" + i + '"></div>');
		}
		setTimeout(() => {
			$(e_child).fadeIn(600);
		}, 100);
	});
};

//更换dropTable中control按钮的图标
change_dropTable_control_svg = id => {
	// console.log($('#dropTable_controlDiv'))
	$("#dropTable_controlDiv").fadeOut(600, () => {
		$("#dropTable_controlDiv").empty();
		svg = null;
		switch (id) {
			case 0:
				//可投骰子
				svg = _ui.svg.dice;
				break;
			case 1:
				//不可投骰子
				svg = _ui.svg.flower;
				break;
			case 2:
				//改倍率
				svg = _ui.svg.dollar;
				break;
			case 3:
				//小局胜利
				svg = _ui.svg.sun;
				break;
			case 4:
				//最终胜利
				svg = _ui.svg.happy;
				break;
		}
		$("#dropTable_controlDiv").append(svg);
		setTimeout(() => {
			$("#dropTable_controlDiv").fadeIn(600);
		}, 100);
	});
};

showAiCurtain = () =>{
	$('#aiCurtain').fadeIn(500)
}

hideAiCurtain = () =>{
	$('#aiCurtain').fadeOut(500,()=>{
		$('#aiCurtain').hide()
	})
}

//我感觉吧，好像是有那么点问题吧
//给5个骰子，算出得分
function calculateScores(nums) {
	// console.log(nums)
	nums = nums.concat();
	nums.sort();
	var sum = 0;
	var numCount = {
		1: 0,
		2: 0,
		3: 0,
		4: 0,
		5: 0,
		6: 0
	};
	for (var i of nums) {
		sum += i;
		numCount[i]++;
	}
	//双对
	var c2 = 0;
	//三连
	var c3 = 0;
	//四连
	var c4 = 0;
	//五连
	var c5 = 0;
	for (var key in numCount) {
		i = numCount[key];
		if (i == 2) {
			c2++;
		} else if (i == 3) {
			c3++;
		} else if (i == 4) {
			c4++;
		} else if (i == 5) {
			c5++;
		}
	}
	//葫芦
	if (c2 == 1 && c3 == 1) {
		sum += 20;
	} else if (c2 == 2 || c3 == 1) {
		sum += 10;
	}
	if (c4 == 1) {
		sum += 40;
	}
	if (c5 == 1) {
		sum += 100;
	}

	//顺子
	var shunziCount = 0;
	var shunziCount_max = 0;
	var number = nums[0];
	for (var i of nums) {
		if (i == number + 1) {
			shunziCount++;
			number++;
		} else if (i != number){
			number = i;
			shunziCount_max = Math.max(shunziCount_max, shunziCount);
			shunziCount = 0;
		}
	}
	shunziCount_max = Math.max(shunziCount_max, shunziCount);
	if (shunziCount_max == 3) {
		sum += 30;
	} else if (shunziCount_max == 4) {
		sum += 60;
	}
	return sum;
}

function rand6() {
	return parseInt(Math.random() * 6 + 1);
}

// // example

// //old:
// $(buttom).click(f())
// f=()=>{
// }

// //new:
// $(buttom).click(f_send())
// f_send = ()=>{
// 	str = 'f()'
// 	sendMessage2Players(str)//广播
// }
